[{"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\components\\modal-window\\modal-media.jsx":"1","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\services-page.jsx":"2","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\components\\modal-window\\modal-form.jsx":"3","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\App.jsx":"4","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\contacts-page.jsx":"5","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\main-page.jsx":"6","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\libs\\rus.js":"7","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\checkbox.jsx":"8","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\image.jsx":"9","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\segment.jsx":"10","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\reportWebVitals.js":"11","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\gallery.jsx":"12","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\input.jsx":"13"},{"size":3262,"mtime":1617851635446,"results":"14","hashOfConfig":"15"},{"size":11171,"mtime":1620368655633,"results":"16","hashOfConfig":"15"},{"size":1268,"mtime":1617851641382,"results":"17","hashOfConfig":"15"},{"size":1022,"mtime":1617854030458,"results":"18","hashOfConfig":"15"},{"size":957,"mtime":1617854587583,"results":"19","hashOfConfig":"15"},{"size":786,"mtime":1607654892442,"results":"20","hashOfConfig":"15"},{"size":844,"mtime":1607444387283,"results":"21","hashOfConfig":"15"},{"size":731,"mtime":1607226771327,"results":"22","hashOfConfig":"15"},{"size":1598,"mtime":1607703775874,"results":"23","hashOfConfig":"15"},{"size":1227,"mtime":1607586988361,"results":"24","hashOfConfig":"15"},{"size":375,"mtime":1606961008578,"results":"25","hashOfConfig":"15"},{"size":2397,"mtime":1607621789636,"results":"26","hashOfConfig":"15"},{"size":884,"mtime":1607617850029,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"58wc7",{"filePath":"30","messages":"31","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\components\\modal-window\\modal-media.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\services-page.jsx",["57"],"import React, { useState } from 'react'\r\nimport { lang as languages } from 'libs/constants'\r\nimport useSWR, { mutate } from 'swr'\r\nimport cn from 'classnames'\r\nimport { getLang, _lang } from 'libs/rus'\r\nimport { getPreview } from 'libs/youtube'\r\nimport { closeModal, openModal, openModalConfirm, openModalMedia } from 'components/modal-window'\r\n\r\nimport ListContainer from 'components/list-container'\r\nimport { useForm, Segment } from 'controls'\r\nimport { \r\n\tIoIosAdd, \r\n\tIoMdTrash, \r\n\tIoIosPlayCircle, \r\n\tIoMdCreate, \r\n\tIoIosArrowDropup, \r\n\tIoIosArrowDropdown \r\n} from 'react-icons/io'\r\nimport { GET, REST } from 'libs/fetch'\r\n\r\n\r\nconst services = [\r\n\t{ id: 1, title: \"BonVoyage\", text: `Главный герой игры — Медведь с реактивным ранцем за спиной.\r\n\tВаша задача петь популярную песню и с помощью...` },\r\n\t{ id: 2, title: \"Торопыжка\", text: `Главный герой игры — Медведь с реактивным ранцем за спиной.\r\n\tВаша задача петь популярную песню и с помощью...` },\r\n]\r\n\r\nconst cases = [\r\n\t{ type: \"youtube\", id: \"JGwWNGJdvx8\" },\r\n\t{ type: \"image\", src: \"/images/1.jpg\" },\r\n\t{ type: \"image\", src: \"/images/2.jpg\" }\r\n]\r\n\r\n\r\nconst firstCategory = {\r\n\t_id: \"0\",\r\n\ttitle: \"Все\",\r\n}\r\n\r\nconst addCategoryModal = {\r\n\ttitle: { type: \"text\", label: \"Название категории\", placeholder: \"Категория\" },\r\n\turl: { type: \"text\", label: \"URL адрес\", placeholder: \"category\" },\r\n\ttext: { type: \"textarea\", rows: 5, placeholder: \"Описание категории\"}\r\n}\r\n\r\nfunction addOrUpdateCategory(lang, item){\r\n\treturn async (values, form) => {\r\n\t\tif(!values.title) return form.setErrors({title: \"Название категории должно быть заполнено!\"})\r\n\t\tif(!values.url) return form.setErrors({url: \"Категории необходим свой уникальный URL адрес\"})\r\n\t\tconst resp = await REST(item?('/api/services/'+item.url): '/api/services', {...values, lang}, item?'PUT': 'POST')\r\n\t\tif(resp.error) return form.setErrors(resp.error)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n}\r\n\r\nfunction addOrUpdateProject(lang, selectedCategory, item){\r\n\r\n\treturn async (values, form) => {\r\n\t\tif(!values.title) return form.setErrors({title: \"Название проекта должно быть заполнено!\"})\r\n\t\tif(!values.url) return form.setErrors({url: \"Проекту необходим свой уникальный URL адрес\"})\r\n\t\tconst resp = await REST('/api/services/'+selectedCategory.url+'/'+(item?item.url: ''), {...values, lang}, item?'PUT': 'POST')\r\n\t\tif(resp.error) return form.setErrors(resp.error)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n}\r\n\r\nconst addProjectModal = {\r\n\ttitle: { type: \"text\", label: \"Название проекта\", placeholder: \"Проект\" },\r\n\turl: { type: \"text\", label: \"URL адрес\", placeholder: \"project\" },\r\n}\r\n\r\nconst moveCategory = async (category, pos) => {\r\n\tconst resp = await REST('/api/services/'+category+'/move', { pos }, 'POST')\r\n\tif(resp.error) return console.log(resp)\r\n\tmutate('/api/services')\r\n}\r\n\r\nexport default function ServicesPage (){\r\n\r\n\tconst form = useForm({lang: \"ru\"})\r\n\tconst lang = form.get('lang')\r\n\r\n\tconst [ category, selectCategory ] = useState()\r\n\tconst [ project, selectProject ] = useState()\r\n\r\n\tconst addCategory = () => openModal(\"Добавление категории\", addCategoryModal, addOrUpdateCategory(lang))\r\n\tconst deleteCategory = async (category) => {\r\n\t\tconst resp = await REST('/api/services/'+category, {}, 'DELETE')\r\n\t\tif(resp.error) return console.log(resp)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n\r\n\tconst deleteProject = async (category, project) => {\r\n\t\tconst resp = await REST('/api/services/'+category+'/'+project, {}, 'DELETE')\r\n\t\tif(resp.error) return console.log(resp)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n\r\n\tconst categoriesMenuItem = [\r\n\t\t{ title: \"Редактировать категорию\", icon: <IoMdCreate/>, onClick: item => {\r\n\t\t\topenModal(\"Изменение категории\", addCategoryModal, addOrUpdateCategory(lang, item), getLang(item, lang))\r\n\t\t}},\r\n\t\t{ title: \"Переместить выше\", icon: <IoIosArrowDropup/>, onClick: item => moveCategory(item.url, 1) },\r\n\t\t{ title: \"Переместить ниже\", icon: <IoIosArrowDropdown/>, onClick: item => moveCategory(item.url, -1) },\r\n\t\t{ title: \"Удалить категорию\", icon: <IoMdTrash/>, onClick: (item) => {\r\n\t\t\topenModalConfirm('Удалить категорию?', _lang(item.title), () => deleteCategory(item.url))\r\n\t\t}},\r\n\t]\r\n\r\n\tconst addProject = () => (category && category.url)?\r\n\t\topenModal(\"Добавление проекта\", addProjectModal, addOrUpdateProject(lang, category)):\r\n\t\tnull\r\n\r\n\tconst projectsMenuItem = [\r\n\t\t{ title: \"Редактировать проект\", icon: <IoMdCreate/>, onClick: item => {\r\n\t\t\topenModal(\"Изменение проекта\", addProjectModal, addOrUpdateProject(lang, category, item), getLang(item, lang))\r\n\t\t}},\r\n\t\t{ title: \"Удалить проект\", icon: <IoMdTrash/>, onClick: (item) => {\r\n\t\t\topenModalConfirm('Удалить категорию?', _lang(item.title), () => deleteProject(category.url, item.url))\r\n\t\t}}\r\n\t]\r\n\r\n\t\r\n\r\n\tconst { data } = useSWR('/api/services', GET, { onSuccess: data => {\r\n\t\tselectCategory(lastCategory => {\r\n\t\t\t\tif(!lastCategory) return null;\r\n\t\t\t\tconst newCategory = data.find(item => item._id === lastCategory._id)\r\n\r\n\t\t\t\tselectProject(project => {\r\n\t\t\t\t\tif(!project || !Array.isArray(newCategory.projects)) return null;\r\n\t\t\t\t\treturn newCategory.projects.find(item => item.url === project.url)\r\n\t\t\t\t})\r\n\r\n\t\t\t\treturn newCategory\r\n\t\t\t})\r\n\t}})\r\n\t\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<header>\r\n\t\t\t\t<h1>Услуги</h1>\r\n\t\t\t\t<Segment name=\"lang\" form={form} options={languages}/>\r\n\t\t\t</header>\r\n\t\t\t<div className=\"services-blocks\">\r\n\t\t\t\t<ListContainer \r\n\t\t\t\t\titems={data} \r\n\t\t\t\t\ttitle=\"Категории\" \r\n\t\t\t\t\tonAdd={addCategory} \r\n\t\t\t\t\tmenuItems={categoriesMenuItem} \r\n\t\t\t\t\tonSelect={selectCategory}\r\n\t\t\t\t\tselectedItem={category}\r\n\t\t\t\t\tlang={lang}\r\n\t\t\t\t\tkeyItem=\"url\"\r\n\t\t\t\t\tkeySub=\"url\"\r\n\t\t\t\t/>\r\n\t\t\t\t{category && (\r\n\t\t\t\t\t<ListContainer \r\n\t\t\t\t\t\titems={category?category.projects: []} \r\n\t\t\t\t\t\ttitle=\"Проекты\" \r\n\t\t\t\t\t\tonAdd={addProject} \r\n\t\t\t\t\t\tmenuItems={projectsMenuItem} \r\n\t\t\t\t\t\tonSelect={selectProject}\r\n\t\t\t\t\t\tselectedItem={project}\r\n\t\t\t\t\t\tlang={lang}\r\n\t\t\t\t\t\tkeyItem=\"url\"\r\n\t\t\t\t\t\tkeySub=\"url\"\r\n\t\t\t\t\t/>\r\n\t\t\t\t)}\r\n\t\t\t\t{project && (<ServiceContainer category={category} project={project} lang={lang} services={services} cases={cases}/>)}\r\n\t\t\t</div>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\n\r\nfunction addOrUpdateService(lang, selectedCategory, selectedProject, index){\r\n\r\n\treturn async (values, form) => {\r\n\t\tif(!values.title) return form.setErrors({title: \"Название услуги должно быть заполнено!\"})\r\n\t\tconst resp = await REST(\r\n\t\t\t'/api/services/'+selectedCategory.url+'/'+selectedProject.url+'/'+(index !== undefined?index: ''), \r\n\t\t\t{...values, lang}, index !== undefined?'PUT': 'POST'\r\n\t\t)\r\n\t\tif(resp.error) return form.setErrors(resp.error)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n}\r\n\r\nconst addServiceModal = {\r\n\ttitle: { type: \"text\", label: \"Название услуги\", placeholder: \"Услуга\" },\r\n\ttext: { type: \"textarea\", rows: 5, placeholder: \"Текст услуги\" },\r\n\tgallery: { type: \"gallery\", label: \"Галерея услуги\" }\r\n}\r\n\r\nconst galleryModal = {\r\n\ttitle: { type: \"text\", label: \"Название проекта\", placeholder: \"Проект\" }\r\n}\r\n\r\nfunction ServiceContainer ({project, category, lang, cases}){\r\n\r\n\tconst addService = () => {\r\n\t\topenModal(\"Добавление услуги\", addServiceModal, addOrUpdateService(lang, category, project));\r\n\t}\r\n\r\n\tconst deleteService = async (index) => {\r\n\t\tconst resp = await REST('/api/services/'+category.url+'/'+project.url+'/'+index, {}, 'DELETE')\r\n\t\tif(resp.error) return console.log(resp)\r\n\t\tmutate('/api/services')\r\n\t\tcloseModal()\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"block-container\" style={{flex: \"1 1 auto\"}}>\r\n\t\t\t<div className=\"block-header\">\r\n\t\t\t\t<h3>{_lang(project.title, lang)}</h3>\r\n\t\t\t\t<button className={cn(\"button-filled\")} onClick={addService}><IoIosAdd/>Добавить услугу</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"list-container\" style={{margin: \"10px 0\"}}>\r\n\t\t\t{project.services && project.services.map((item, index) => (\r\n\t\t\t\t<div className=\"list-item\" key={index}>\r\n\t\t\t\t\t<button onClick={() => openModal(\r\n\t\t\t\t\t\t\"Изменение услуги\", \r\n\t\t\t\t\t\taddServiceModal, \r\n\t\t\t\t\t\taddOrUpdateService(lang, category, project, index), \r\n\t\t\t\t\t\tgetLang(item, lang),\r\n\t\t\t\t\t\t() => deleteService(index)\r\n\t\t\t\t\t)}>\r\n\t\t\t\t\t\t<div className=\"title\">{_lang(item.title, lang)}</div>\r\n\t\t\t\t\t\t<div className=\"sub\">{_lang(item.text, lang)}</div>\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t</div>\r\n\t\t\t<Gallery \r\n\t\t\t\titems={project.cases || []} \r\n\t\t\t\tstyle={{marginTop: \"12px\"}} \r\n\t\t\t\tapi={`/api/services/${category.url}/${project.url}/cases`} \r\n\t\t\t\tcontrols={galleryModal}\r\n\t\t\t\tlang={lang}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nfunction getGalleryItemMap(onClick){\r\n\treturn function galleryItemMap (item, index) {\r\n\r\n\t\tif(item.type === 1)\r\n\t\t\treturn (\r\n\t\t\t\t<button key={index} className=\"youtube\" onClick={() => onClick(item, index)} style={{backgroundImage: `url(${getPreview(item.id)}`}}>\r\n\t\t\t\t\t<IoIosPlayCircle/>\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\r\n\t\tif(item.type === 0)\r\n\t\t\treturn (\r\n\t\t\t\t<button key={index} className=\"image\" onClick={() => onClick(item, index)}>\r\n\t\t\t\t\t<img src={item.src} alt=\"Изображение галереи\"/>\r\n\t\t\t\t</button>\r\n\t\t\t)\r\n\r\n\t\treturn null;\r\n\t}\r\n}\r\n\r\nfunction Gallery ({items, style, className, api, lang}){\r\n\t\r\n\r\n\tconst addPhoto = () => {\r\n\t\topenModalMedia(\"Добавить медиа\", galleryModal, async (values, form) => {\r\n\t\t\tconst resp = await REST(api, {...values, lang}, 'POST')\r\n\t\t\tif(resp.error) return console.log(resp)\r\n\t\t\tmutate('/api/services')\r\n\t\t\tcloseModal()\r\n\t\t});\r\n\t}\r\n\r\n\tconst onClick = (item, index) => {\r\n\t\tif(item.id) item = { ...item, url: \"https://www.youtube.com/watch?v=\"+item.id }\r\n\r\n\t\tconst deleteMedia = async () => {\r\n\t\t\tconst resp = await REST(api+'/'+index, {}, 'DELETE')\r\n\t\t\tif(resp.error) return console.log(resp)\r\n\t\t\tmutate('/api/services')\r\n\t\t\tcloseModal()\r\n\t\t}\r\n\r\n\t\tconst editMedia = async (values, form) => {\r\n\t\t\tconst resp = await REST(api+'/'+index, {...values, lang}, 'PUT')\r\n\t\t\tif(resp.error) return console.log(resp)\r\n\t\t\tmutate('/api/services')\r\n\t\t\tcloseModal()\r\n\t\t}\r\n\r\n\t\topenModalMedia(\"Изменить медиа\", galleryModal, editMedia, getLang(item, lang), deleteMedia);\r\n\t}\r\n\r\n\r\n\treturn (\r\n\t\t<div className=\"gallery-container\">\r\n\t\t\t<div className=\"block-header\" style={{marginTop: \"20px\"}}>\r\n\t\t\t\t<h4>Реализованные проекты</h4>\r\n\t\t\t\t<button className={cn(\"button-filled\")} onClick={addPhoto}><IoIosAdd/>Добавить фото/видео</button>\r\n\t\t\t</div>\r\n\t\t\t<div className={cn(\"gallery\", className)} style={style}>\r\n\t\t\t\t{items.map(getGalleryItemMap(onClick))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n","C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\components\\modal-window\\modal-form.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\App.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\contacts-page.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\pages\\main-page.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\libs\\rus.js",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\checkbox.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\image.jsx",["58"],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\segment.jsx",["59"],"import React, { useState, useEffect, useRef } from 'react'\r\nimport cn from 'classnames'\r\n\r\nexport default function Segment ({className, options, form, name, style }) {\r\n\r\n\tconst [ cursorStyle, setCursorStyle ] = useState(null);\r\n\tconst ref = useRef(null);\r\n\r\n\tconst value = form.values.get(name);\r\n\r\n\tuseEffect(() => {\t\t\t\t\t\t\t\t\t\t\t\t\t\t//Не то, чтобы это было прям изящно, но, думаю, пойдет\r\n\t\tif(ref.current){\r\n\t\t\tconst rect = ref.current.getBoundingClientRect();\r\n\t\t\tconst offset = ref.current.offsetLeft;\r\n\r\n\t\t\tsetCursorStyle({ left: offset });\r\n\t\t}\r\n\t}, [ value ]);\r\n\r\n\r\n\tconst button = (item, index) => (\t\t\t\t\t\t//С помощью этой функции сделаем полиморфизм\r\n\r\n\t\t<button key={index} className={ cn({ \"active\": value === index }) }  ref={value === index? ref: null } onClick={(e) => {\r\n\t\t\te.preventDefault();\r\n\t\t\tform.onChange( { [name]: index } );\r\n\t\t}}>{item}</button>\r\n\t);\r\n\r\n\treturn (\r\n\t\t<div className={cn(className, 'segment')} style={style}>\r\n\t\t\t{ Array.isArray(options)? options.map(button) : Object.keys(options).map(key => button(options[key], key)) }\r\n\t\t\t{cursorStyle && (<div className=\"cursor\"  style={cursorStyle}></div>)}\r\n\t\t</div>\r\n\t);\r\n}",["60","61"],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\reportWebVitals.js",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\gallery.jsx",[],"C:\\Users\\fox\\Desktop\\Works\\digital-events\\cms\\src\\controls\\input.jsx",[],{"ruleId":"62","severity":1,"message":"63","line":36,"column":7,"nodeType":"64","messageId":"65","endLine":36,"endColumn":20},{"ruleId":"62","severity":1,"message":"66","line":1,"column":25,"nodeType":"64","messageId":"65","endLine":1,"endColumn":33},{"ruleId":"62","severity":1,"message":"67","line":13,"column":10,"nodeType":"64","messageId":"65","endLine":13,"endColumn":14},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","replacedBy":"71"},"no-unused-vars","'firstCategory' is assigned a value but never used.","Identifier","unusedVar","'useState' is defined but never used.","'rect' is assigned a value but never used.","no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-global-assign","no-unsafe-negation"]